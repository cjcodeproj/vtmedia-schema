<?xml version='1.0'?>

<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' elementFormDefault='qualified'>

 <xs:annotation>
  <xs:documentation xml:lang='en-US'>
    Copyright 2023, Chris Josephes

    This work is licensed under the Creative Commons Attribution-ShareAlike
    4.0 International License.

    To view a copy of this license, visit
    http://creativecommons.org/licenses/by-sa/4.0/ or
    send a letter to
    Creative Commons
    PO Box 1866
    Mountain View, CA 94042, USA.
  </xs:documentation>
 </xs:annotation>

 <xs:simpleType name='UUIDType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Fixed UUID string.
    Regex pattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}

    Technically, an RFC 4122 compliant UUID implementation would use a slighly more restictive pattern:
    [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}

    The RFC dictates that what is essentially the character in the 15th column position is
    1 through 5 specifying the UUID version (time based, random, namespace, or other).  The
    character in the 20th column represents the variant.

    For now I'm going with the more flexible regex, because there are uuidgen implementations
    that seem to generate non-standard values when the random type is chosen.  Anyone generating
    UUIDs for use in the schema are strongly encouraged to make sure their values match the
    RFC 4122 specification.  Some websites, like uuidtools.com will test UUID values.

    The Python uuid module implementation generates proper UUID values.

    Ideally, this would get resolved with a dedicated UUID type in XMLSchema.
   </xs:documentation>
  </xs:annotation>
  <xs:restriction base='xs:token'>
   <xs:length value='36' fixed='true'/>
   <xs:pattern value='[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name='CountryCodeType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Country code type, with a restriction on length.
    Can accept any value that is a standard ISO 3166-2, ISO 3166-3, or IDO 3166-1 value.
   </xs:documentation>
  </xs:annotation>
  <xs:restriction base='xs:token'>
   <xs:minLength value='2'/>
   <xs:maxLength value='3'/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name='CurrencyCodeType'>
  <xs:annotation>
   <xs:documentation>
    Currency code, with a restriction on length.
    Can accept any value that is a standard ISO 4217 code.
   </xs:documentation>
  </xs:annotation>
  <xs:restriction base='xs:token'>
   <xs:length value='3'/>
  </xs:restriction>
 </xs:simpleType>

 <xs:complexType name='VariableDateType'>
  <xs:choice>
   <xs:element name='exact' type='xs:date'/>
   <xs:sequence>
    <xs:element name='from' type='xs:date'/>
    <xs:choice>
     <xs:element name='to' type='xs:date'/>
     <xs:element name='range' type='xs:duration'/>
    </xs:choice>
   </xs:sequence>
  </xs:choice>
 </xs:complexType>

</xs:schema>
