<?xml version='1.0'?>

<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' elementFormDefault='qualified'>

 <xs:annotation>
  <xs:documentation xml:lang='en-US'>
    Copyright 2022, Chris Josephes

    This work is licensed under the Creative Commons Attribution-ShareAlike
    4.0 International License.

    To view a copy of this license, visit
    http://creativecommons.org/licenses/by-sa/4.0/ or
    send a letter to
    Creative Commons
    PO Box 1866
    Mountain View, CA 94042, USA.
  </xs:documentation>
 </xs:annotation>

 <xs:annotation>
  <xs:documentation xml:lang='en-US'>
   Schema types used for catagorizing proper nouns and keywords.

   A proper noun can be either...
     Person: living person
     Place: location
     Thing: named object
     Group: group of people
     Entity: collective thing
     Event: something that happens

   Proper nouns are used for detailed/specific keywords when
   it is more suitable than generic keywords.


   A keyword can be either...
     Generic: a generic word
     Proper Noun: one of the above described proper nouns.

   Keywords provide a pool of relevant terms that
   describe the work of art, or elements within the
   work of art, and can also be used to compare
   one work against another.
  </xs:documentation>
 </xs:annotation>

 <xs:complexType name='ProperNounType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Root element for all proper nouns.
   </xs:documentation>
  </xs:annotation>
  <xs:simpleContent>
   <xs:extension base='xs:token'/>
  </xs:simpleContent>
 </xs:complexType>

 <xs:complexType name='PNNameEmptyType'>
 </xs:complexType>

 <xs:complexType name='PNPlaceType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
     Structured (or loose) type describing a location
   </xs:documentation>
  </xs:annotation>
  <xs:choice>
   <xs:element name='generic' type='xs:token' maxOccurs='1'/>
   <xs:sequence>
    <xs:element name='name' type='xs:token' minOccurs='0' maxOccurs='1'/>
    <xs:element name='ci' type='xs:token' minOccurs='0' maxOccurs='1'/>
    <xs:element name='co' type='xs:token' minOccurs='0' maxOccurs='1'/>
    <xs:choice minOccurs='0' maxOccurs='1'>
     <xs:element name='st' type='xs:token'/>
     <xs:element name='pr' type='xs:token'/>
    </xs:choice>
    <xs:element name='cn' type='xs:token' minOccurs='0' maxOccurs='1'/>
    <xs:element name='planet' type='xs:token' minOccurs='0' maxOccurs='1'/>
   </xs:sequence>
  </xs:choice>
 </xs:complexType>

 <xs:simpleType name='PNNamePrefixClassType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Valid types to identify a name prefix.
   </xs:documentation>
  </xs:annotation>
  <xs:restriction base='xs:token'>
   <xs:enumeration value='honorific'/>
   <xs:enumeration value='professional'/>
   <xs:enumeration value='rank'/>
  </xs:restriction>
 </xs:simpleType>

 <xs:complexType name='PNNamePrefixType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
     Prefix element type for a given name.  Supports an optional type attribute.
   </xs:documentation>
  </xs:annotation>
  <xs:simpleContent>
   <xs:extension base='xs:token'>
    <xs:attribute name='type' type='PNNamePrefixClassType' use='optional'/>
   </xs:extension> 
  </xs:simpleContent>
 </xs:complexType>

 <xs:simpleType name='PNNameSuffixClassType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Valid types to identify a name suffix.
   </xs:documentation>
  </xs:annotation>
  <xs:restriction base='xs:token'>
   <xs:enumeration value='honorific'/>
   <xs:enumeration value='generational'/>
   <xs:enumeration value='academic'/>
  </xs:restriction>
 </xs:simpleType>

 <xs:complexType name='PNNameSuffixType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Suffix element type for a given name.  Supports an optional type attribute.
   </xs:documentation>
  </xs:annotation>
  <xs:simpleContent>
   <xs:extension base='xs:token'>
    <xs:attribute name='type' type='PNNameSuffixClassType' use='optional'/>
   </xs:extension>
  </xs:simpleContent>
 </xs:complexType>

 <xs:complexType name='PNNameType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Standard type for a real person's name.
   </xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name='prefix' type='PNNamePrefixType' minOccurs='0' maxOccurs='1'/>
   <xs:element name='gn' type='xs:token' minOccurs='1' maxOccurs='1'/>
   <xs:element name='nick' type='xs:token' minOccurs='0' maxOccurs='1'/>
   <xs:choice minOccurs='0' maxOccurs='1'>
    <xs:element name='mn' type='xs:token'/>
    <xs:element name='nmn' type='PNNameEmptyType'/>
   </xs:choice>
   <xs:choice minOccurs='0' maxOccurs='1'>
    <xs:element name='fn' type='xs:token'/>
    <xs:element name='nln' type='PNNameEmptyType'/>
   </xs:choice>
   <xs:element name='suffix' type='PNNameSuffixType' minOccurs='0' maxOccurs='1'/>
  </xs:sequence>
 </xs:complexType>

 <xs:complexType name='PNArtType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Proper Noun representing a work of art.
   </xs:documentation>
  </xs:annotation>
  <xs:simpleContent>
   <xs:extension base='xs:token'>
    <xs:attribute name='type' type='PNArtMediaType' use='optional'/>
    <xs:attribute name='year' type='xs:gYear' use='optional'/>
   </xs:extension>
  </xs:simpleContent>
 </xs:complexType>


 <xs:simpleType name='PNArtMediaType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Supported types of source media.
   </xs:documentation>
  </xs:annotation>
  <xs:restriction base='xs:token'>
   <!-- print -->
   <xs:enumeration value='story'/>
   <xs:enumeration value='book'/>
   <xs:enumeration value='bookSeries'/>
   <xs:enumeration value='comicBook'/>
   <xs:enumeration value='comicBookSeries'/>
   <!-- live performance -->
   <xs:enumeration value='play'/>
   <!-- av entertainment -->
   <xs:enumeration value='movie'/>
   <xs:enumeration value='televisionShow'/>
   <!-- a entertainment -->
   <xs:enumeration value='song'/>
   <xs:enumeration value='album'/>
   <!-- written prose -->
   <xs:enumeration value='poem'/>
   <!-- physical artwork -->
   <xs:enumeration value='statue'/>
   <xs:enumeration value='sculpture'/>
   <xs:enumeration value='painting'/>
   <!-- interactive artwork -->
   <xs:enumeration value='videoGame'/>
  </xs:restriction>
  <!-- rejected values: 
         magazine, newspaper, game, radioShow, podcast
  -->
 </xs:simpleType>


 <xs:group name='ProperNounGroup'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
     All suitable proper noun types.
   </xs:documentation>
  </xs:annotation>
  <xs:choice>
   <xs:element name='person' type='PNNameType'/>
   <xs:element name='place' type='PNPlaceType'/>
   <xs:element name='art' type='PNArtType'/>
   <xs:element name='thing' type='ProperNounType'/>
   <xs:element name='group' type='ProperNounType'/>
   <xs:element name='entity' type='ProperNounType'/>
   <xs:element name='event' type='ProperNounType'/>
  </xs:choice>
 </xs:group>


 <xs:complexType name='KeywordsType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Contains one or more keyword, proper noun, or group elements.
   </xs:documentation>
  </xs:annotation>
  <xs:choice minOccurs='1' maxOccurs='unbounded'>
   <xs:element name='generic' type='KeywordType'/>
   <xs:element name='properNoun' type='KeywordPNType'/>
   <xs:element name='group' type='KWGroupType'/>
  </xs:choice>
 </xs:complexType>

 <xs:complexType name='KWGroupType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    The group type provides a simple mechanism to put
    generic keywords or proper nouns in a group, which
    may be useful if they all have a common trait.

    It is possible to set a blanket relevance value
    which should be inherited by every child element,
    or a collection value, which can be used to tie
    keywords into a named grouping.
   </xs:documentation>
  </xs:annotation>
  <xs:choice minOccurs='1' maxOccurs='unbounded'>
   <xs:element name='generic' type='KeywordType'/>
   <xs:element name='properNoun' type='KeywordPNType'/>
  </xs:choice>
  <xs:attribute name='relevance' type='xs:integer' use='optional'/>
  <xs:attribute name='collection' type='xs:token' use='optional'/>
 </xs:complexType>

 <xs:simpleType name='KeywordRelevance'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Each keyword can have a relevance value from 1 (highest) to 5 (lowest),
    relfecting the relevance of the keyword to the work of art.  By default,
    if there is no value, it should be assumed to be 3.

    For example, a movie that mostly features car chases, could have a
    generic keyword "car chase", which should have a relevance value of 1.
   </xs:documentation>
  </xs:annotation>
  <xs:restriction base='xs:integer'>
   <xs:minInclusive value='1'/>
   <xs:maxInclusive value='5'/>
  </xs:restriction>
 </xs:simpleType>

 <xs:complexType name='KeywordType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
     Keyword Element Attributes
     relevance : relevance score, 1-5 (1 = most relevance, default = 3)
     collection : grouping of keywords into logical order
     clarification : a word to help identify a keyword with an ambiguous definition
     synonym : a word identical to the keyword
   </xs:documentation>
  </xs:annotation>
  <xs:simpleContent>
   <xs:extension base='xs:string'>
    <xs:attribute name='collection' type='xs:token' use='optional'/>
    <xs:attribute name='relevance' type='KeywordRelevance' use='optional'/>
    <xs:attribute name='related' type='xs:string' use='optional'/>
    <xs:attribute name='synonym' type='xs:string' use='optional'/>
    <xs:attribute name='clarification' type='xs:string' use='optional'/>
   </xs:extension>
  </xs:simpleContent>
 </xs:complexType>

 <xs:complexType name='KeywordPNType'>
  <xs:annotation>
   <xs:documentation xml:lang='en-US'>
    Complex type for an element that will contain a single
    proper noun element.
   </xs:documentation>
  </xs:annotation>
  <xs:choice minOccurs='1' maxOccurs='1'>
   <xs:group ref='ProperNounGroup'/>
  </xs:choice>
  <xs:attribute name='collection' type='xs:token' use='optional'/>
  <xs:attribute name='relevance' type='KeywordRelevance' use='optional'/>
  <xs:attribute name='related' type='xs:string' use='optional'/>
 </xs:complexType>

</xs:schema>
